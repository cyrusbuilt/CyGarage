
var Timer statusTimer = null
val String fileName = "cygarage.rules"
val int notifyDelay = 15

rule "CyGarageRecCmdON"
when
    Item CyGarage received command
then
    logInfo(fileName, "Garage door received command.")
    sendHttpGetRequest("http://<your_ip_here>/device/status")
end

rule "CyGarageOPEN_AJAR_15"
when
    System started or Item CyGarageStatus changed
then
    // If not closed and we haven't already started the timer,
    // then start a new one and alert in 15 min if the door is
    // still open. Otherwise, kill any existing timer. 
    if (CyGarageStatus.state != "CLOSED") {
        logInfo(fileName, "Garage door is OPEN or AJAR!")
        if (statusTimer === null) {
            statusTimer = createTimer(now.plusMinutes(notifyDelay), [|
                logInfo(fileName, "Garage door has been left AJAR or OPEN for 15 minutes!")
                sendBroadcastNotification("Garage door has been left AJAR or OPEN for 15 minutes!")
            ])
        }
        else {
            logInfo(fileName, "Status Timer rescheduled")
            statusTimer.reschedule(now.plusMinutes(notifyDelay))
        }
    }
    else {
        logInfo(fileName, "Garage door is CLOSED.")
        if (statusTimer !== null) {
            statusTimer.cancel()
            statusTimer = null
        }
    }
end